apply plugin: 'antlr'
apply plugin: 'groovy'
apply plugin: 'java'

project.version = '1.3.0'

defaultTasks 'build'

processResources {
    filesMatching('clgen.properties') {
        expand projectVersion: project.version
    }
} 

generateGrammarSource {
    arguments += ["-package", "org.flightgear.clgen"]
}

repositories {
    mavenCentral()
}

dependencies {
    antlr 'org.antlr:antlr4:4.7'
    compileOnly 'org.antlr:antlr4-runtime:4.7'
    implementation 'org.apache.velocity:velocity:1.7'
    implementation 'com.github.librepdf:openpdf:1.0.1'
    testImplementation 'org.codehaus.groovy:groovy-all:2.4.11'
    testImplementation 'cglib:cglib-nodep:3.2.5'
    testImplementation 'org.spockframework:spock-core:1.0-groovy-2.4'
}

jar {
    manifest {
        attributes('Main-Class': 'org.flightgear.clgen.CLGen')
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
}

task release(type: Zip, dependsOn: ['build', 'vim']) {
    println "Don't forget to update version number in both scripts"
    destinationDirectory = file('build/release')
    into("CLGen-${project.version}") {
        from file('clgen')
        from file('clgen.bat')
        from file('README.md')
    }
    into("CLGen-${project.version}/build/libs") {
        from fileTree('build/libs')
        include("**/CLGen-${project.version}.jar")
    }
    into("CLGen-${project.version}/samples") {
        from fileTree('samples')
        include('**/*.clg')
    }
}

task vim(type: Zip) {
    destinationDirectory = file('build/release')
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    archiveAppendix = "Vim"
    into("start") {
        from fileTree('support/vim')
        include('**/*.vim')
    }
}

release.doLast { zip ->
    ant.checksum file: zip.archivePath
}
